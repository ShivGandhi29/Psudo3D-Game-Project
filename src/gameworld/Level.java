package gameworld;

/**
 * Data for default level layouts,
 * @author David, Tom, Shiv
 */
public enum Level {
  LEVEL_ONE (new int[][]{
    //						 1 1 1 1 1
    //	 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    {1,1,8,1,1,1,1,1,1,1,1,1,1,1,1},// 0
    {1,0,0,0,0,1,0,0,0,6,0,0,0,0,1},// 1
    {1,0,0,0,0,1,0,0,0,1,0,0,0,0,1},// 2
    {1,0,0,0,0,1,1,3,1,1,0,0,0,0,1},// 3
    {1,0,0,0,0,1,1,1,1,1,0,0,0,0,1},// 4
    {1,0,1,1,0,1,1,0,0,5,0,0,0,0,1},// 5
    {1,0,1,1,0,1,1,5,1,1,0,0,0,0,1},// 6
    {1,0,0,0,0,1,0,0,0,1,0,0,0,0,1},// 7
    {1,0,0,0,0,1,0,0,0,1,0,0,0,0,1},// 8
    {1,0,0,0,0,1,0,0,0,1,0,0,0,0,1},// 9
    {1,0,0,0,0,1,1,2,1,1,1,5,1,1,1},// 10
    {1,1,7,1,1,1,1,1,1,1,1,0,1,1,1},// 11
    {1,0,0,1,0,0,0,0,1,0,0,0,0,1,1},// 12
    {1,0,0,0,0,1,0,0,0,0,0,0,0,1,1},// 13
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},// 14
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}}, 8,8) //15
  ,
  /*

	1 = wall dark grey
	2 = yellow Key (doors)
	3 = key red (hidden wall locked)
	4 = Wall without key
	5 = door
	6 = hidden wall
	7 = hidden wall locked
	8 = final wall

   */

  LEVEL_TWO (new int[][]{
    //						Y 1 1 1 1 1 1 1 1 1 1 2 2
    //   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},// 0 X
    {1,0,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1},// 1
    {1,0,0,0,6,2,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1},// 2
    {1,0,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1},// 3
    {1,1,5,1,1,1,1,1,5,1,1,1,5,1,1,1,5,1,1,1,1,1},// 4
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 5
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 6
    {1,1,5,1,1,1,1,1,5,1,1,1,5,1,1,1,5,1,1,1,1,1},// 7
    {1,0,0,0,1,0,7,0,0,0,1,0,0,0,1,0,0,0,1,1,3,1},// 8
    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1},// 9
    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1},// 10
    {1,1,1,1,1,0,1,1,6,1,1,1,1,6,1,1,1,1,1,0,0,1},// 11
    {1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 12
    {1,0,9,9,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},// 13
    {1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1},// 14
    {1,1,0,1,0,0,1,0,0,0,1,1,0,1,1,0,1,0,0,1,0,1},// 15
    {1,0,0,0,1,1,0,0,1,0,1,0,0,1,1,1,1,0,0,1,0,1},// 16
    {1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1},// 17
    {1,0,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,0,0,1},// 18
    {1,0,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,1},// 19
    {1,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1},// 20
    {1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,8,0,1},// 21
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}}, 2,2)// 22

  ,
  LEVEL_THREE (new int[][]{
    //   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    {1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,1,1,9,1},// 0
    {1,0,0,0,5,0,0,0,0,0,1,1,2,0,1,0,0,1,0,6,0,1},// 1
    {1,5,1,1,1,1,1,1,0,0,5,0,1,0,1,0,0,1,0,1,0,1},// 2
    {1,0,0,0,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,1,0,1},// 3
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1},// 4
    {1,0,0,0,9,9,9,0,0,9,0,9,0,9,0,9,0,9,0,1,0,1},// 5
    {1,1,1,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},// 6
    {1,0,1,0,1,1,1,1,5,1,1,1,5,1,1,0,0,0,0,9,0,1},// 7
    {1,0,1,0,1,0,7,0,0,0,1,0,0,0,1,0,0,0,0,9,0,1},// 8
    {1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,9,0,1},// 9
    {9,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,9,0,1},// 10
    {9,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,9,0,1},// 11
    {9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,1},// 12
    {9,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,9,0,1},// 13
    {9,0,1,1,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,9,0,1},// 14
    {1,0,1,1,0,0,0,0,0,0,0,1,0,0,6,1,1,0,0,9,0,1},// 15
    {1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,3,0,1,0,9,0,1},// 16
    {1,0,6,7,5,1,0,0,1,1,0,0,0,0,1,0,1,1,0,9,0,1},// 17
    {1,0,9,9,8,0,0,0,1,1,0,0,1,1,1,0,1,0,0,9,0,1},// 18
    {1,0,9,9,9,0,0,0,0,0,1,0,1,0,1,0,1,1,0,9,0,1},// 19
    {1,0,0,0,0,0,0,1,0,0,1,1,1,0,1,6,1,1,0,9,0,1},// 20
    {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1},// 21
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}}, 4,3),// 22

  LEVEL_FOUR (new int[][]{
    //   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},// 0
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 1
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 2
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 3
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 4
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 5
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 6
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 7
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 8
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 9
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 10
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 11
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 12
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 13
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 14
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 15
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 16
    {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 17
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 18
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 19
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},// 20
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,8,1},// 21
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}}, 4,3);// 22
  /*

	1 = wall dark grey
	2 = yellow Key (doors)
	3 = key red (hidden wall locked)
	4 = Wall without key
	5 = door
	6 = hidden wall
	7 = hidden wall locked
	8 = final wall

   */

  private final int[][] map;
  private final int positionX, positionY;

  /**
   * Each level needs a map and a starting x and y position
   * @param map
   * @param startX
   * @param startY
   */
  Level(int[][] map,int startX, int startY) {
    this.map = map;
    this.positionX = startX;
    this.positionY = startY;
  }

  /**
   * returns player X pos
   * @return
   */
  public int getPosX() {
    return positionX;
  }
  /**
   * returns player Y pos
   * @return
   */
  public int getPosY() {
    return positionY;
  }

  /**
   * returns width of the map 2d array
   * @return
   */
  public int getWidth() {
    return map[0].length;
  }

  /**
   * returns height of the map 2d array
   * @return
   */
  public int getHeight() {
    return map.length;
  }

  /**
   * returns map
   * @return
   */
  public int[][] getMap() {
    return map;
  }



}